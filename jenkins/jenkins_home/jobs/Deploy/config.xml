<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>DÃ©ploiement vers Aegir</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <org.jenkinsci.plugins.gitlablogo.GitlabLogoProperty plugin="gitlab-logo@1.0.1">
      <repositoryName></repositoryName>
    </org.jenkinsci.plugins.gitlablogo.GitlabLogoProperty>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.ChoiceParameterDefinition>
          <name>ENVIRONMENT</name>
          <description>Choix de l&apos;environnement</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>dev</string>
              <string>staging</string>
              <string>production</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>migrer_sites</name>
          <description>Cocher cette case pour lancer automatiquement la migration du(des) site(s).</description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>aegir</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.35.2">
      <project>tests</project>
      <filter>build/*.tar.gz</filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector"/>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

#HASH=${GIT_COMMIT:0:4}
#PLATFORMNAME=my-${ENVIRONMENT}-7.x-s{$COPYARTIFACT_BUILD_NUMBER_DAUPHIN_TESTS_FONCTIONNELS}-${BUILD_NUMBER}    
AEGIRSRV=local.aegir.sfl
AEGIRUSER=aegir
AEGIRPATH=/var/aegir
ARTIFACT=`ls $WORKSPACE/build/*.tar.gz`
BUILDNAME=`basename &quot;$ARTIFACT&quot;`
PLATFORMNAME=${ENVIRONMENT}-`echo &quot;$BUILDNAME&quot; | cut -d&apos;.&apos; -f1`-${BUILD_NUMBER}
echo $PLATFORMNAME

if [ ${ENVIRONMENT} = dev ]; then
  DESTSRV=server_master
else
  echo &quot;ENVIRONMENT $ENVIRONMENT does not have defined destination server alias.&quot;
  exit -1
fi

# Script options
set -x
set -e

# Supprimer ancien bootstrap (besoin d&apos;un sudo specifique...)
if test -e $WORKSPACE/src/drupal; then
  # chmod +w $WORKSPACE/src/drupal/sites/default
  /bin/rm -rf $WORKSPACE/src/drupal
fi


# exit 0;

# Bootstrap nouveau, utilise le cache ~jenkins/.drush/cache/download
# drush make --prepare-install --translations=fr --contrib-destination=profiles/dauph_profile $WORKSPACE/dauph-profile/build/build-dauphin.make src/drupal

mkdir -p $WORKSPACE/src/drupal
cd $WORKSPACE/src/drupal
tar -xvf $WORKSPACE/build/${BUILDNAME} .

cd $WORKSPACE

echo &quot;Rsync&apos;ing ${PLATFORMNAME} to aegir&quot;
rsync -a src/drupal/ aegir@localhost:${AEGIRPATH}/platforms/${PLATFORMNAME}

#chown -R aegir:aegir ${AEGIRPATH}/platforms/${PLATFORMNAME}

echo &quot;Declaring ${PLATFORMNAME} in aegir.&quot;

ssh ${AEGIRUSER}@${AEGIRSRV} &quot;drush --root=&apos;${AEGIRPATH}/platforms/${PLATFORMNAME}&apos; provision-save &apos;@platform_${PLATFORMNAME}&apos; --context_type=&apos;platform&apos;&quot; --web_server=@${DESTSRV}
ssh ${AEGIRUSER}@${AEGIRSRV} &quot;drush @hostmaster hosting-import platform_${PLATFORMNAME}&quot;
ssh ${AEGIRUSER}@${AEGIRSRV} &quot;drush @hostmaster hosting-dispatch&quot;

if [ &quot;$migrer_sites&quot; = &quot;true&quot; ]; then
  echo &quot;Migrating all websites currently on ${ENVIRONMENT}-my-* to ${PLATFORMNAME}&quot;
  ssh ${AEGIRUSER}@${AEGIRSRV} &quot;./migrate-sites ${ENVIRONMENT} ${PLATFORMNAME}&quot;
fi

# Clean up copied artifacts
rm -rf $WORKSPACE/build/*</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>